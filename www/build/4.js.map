{"version":3,"sources":["../../src/pages/Logins/standard-login/standard-login.ts","../../src/pages/Logins/standard-login/standard-login.module.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import {Component} from '@angular/core';\nimport {IonicPage, MenuController, NavController, NavParams} from 'ionic-angular';\nimport {TabsPage} from \"../../HomeTabs/tabs/tabs\";\nimport {ForgotPasswordPage} from \"../forgot-password/forgot-password\";\nimport {AuthenticationProvider} from \"../../../providers/users/authentication\";\nimport {ToolsProvider} from \"../../../providers/tools/tools\";\nimport {Storage} from \"@ionic/storage\";\n\n/**\n * Generated class for the StandardLoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-standard-login',\n  templateUrl: 'standard-login.html',\n})\nexport class StandardLoginPage {\n\n    email: string;\n    password: string;\n\n  constructor(public navCtrl: NavController, public menu: MenuController, public navParams: NavParams, public authProvider: AuthenticationProvider, public tools: ToolsProvider, public storage: Storage) {\n      menu.enable(false, 'mainCalendarMenu');\n  }\n\n    forgotPassword() {\n        this.navCtrl.push('ForgotPasswordPage');\n    }\n\n    login() {\n        if (this.email == null || this.email == \"\" || this.password == null || this.password == \"\") {\n            this.tools.presentToast(\"bottom\", \"Please enter an email and password.\");\n            return;\n        }\n\n        if(navigator.onLine) { //test for internet connection\n            let that = this;\n            let loading = this.tools.presentLoading();\n\n            loading.present().then(()=> {\n                let promise = new Promise((resolve, reject) => {\n                    that.authProvider.authenticateUser(that.email, that.password).then(response => { //full authentication process gets done in the user service\n                        if (response != \"Valid\")\n                            reject(response);\n                        else\n                            resolve();\n                    }).catch(error => {\n                        reject(error);\n                    });\n                });\n\n                promise.then(() => {\n                    loading.dismiss();\n                    this.storage.set('user-email', this.email);\n                    this.navCtrl.push('TabsPage'); //allow entry if successful login\n                }).catch(error => { //handle errors thrown by FireBase\n                    loading.dismiss();\n                    this.authProvider.firebaseAuthenticationError(error);\n                    console.log('HELLO!');\n                });\n            });\n        }\n        else {\n            this.tools.presentToast(\"bottom\", \"Sorry, you're not connected to the internet\");\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Logins/standard-login/standard-login.ts","import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {StandardLoginPage} from './standard-login';\nimport {CreateTrainingPage} from \"../../Training/create-training/create-training\";\n\n@NgModule({\n  declarations: [\n    StandardLoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(StandardLoginPage),\n  ],\n    entryComponents: [\n        StandardLoginPage,\n    ]\n})\nexport class StandardLoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Logins/standard-login/standard-login.module.ts"],"sourceRoot":""}