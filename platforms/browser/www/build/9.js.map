{"version":3,"sources":["../../src/pages/HomeTabs/tools/calculators/unit-converter/unit-converter.module.ts","../../src/pages/HomeTabs/tools/calculators/unit-converter/unit-converter.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { UnitConverterPage } from './unit-converter';\n\n@NgModule({\n  declarations: [\n    UnitConverterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(UnitConverterPage),\n  ],\n})\nexport class UnitConverterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/HomeTabs/tools/calculators/unit-converter/unit-converter.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the UnitConverterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-unit-converter',\n  templateUrl: 'unit-converter.html',\n})\nexport class UnitConverterPage {\n\n  measurements: {\n      feet: string,\n      inches: string,\n      meters: string,\n  };\n  outputs: {\n      metric: string,\n      imperial: string\n  };\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n      this.measurements = {\n          feet: \"0.00\",\n          inches: \"0.00\",\n          meters: \"0.00\",\n      };\n      this.outputs = {\n          metric: \"0.00m\",\n          imperial: \"0'0\\\"\"\n      };\n  }\n\n    cancel() {\n        this.navCtrl.pop();\n    }\n\n    isNumber(event) {\n        let key = window.event ? event.keyCode : event.which;\n        if (key == 46 || event.keyCode == 8 || event.keyCode == 46 || event.keyCode == 37 || event.keyCode == 39) {\n            return true;\n        }\n        else return !( key < 48 || key > 57);\n    }\n\n\n    updateTextFocus(value: string) {\n      if(this.measurements[value] == \"0.00\" || this.measurements[value] == \"0\") {\n          this.measurements[value] = \"\";\n      }\n    }\n\n    updateTextBlur(value: string) {\n        if(this.measurements[value] == \"\") {\n            this.measurements[value] = \"0.00\";\n        }\n    }\n\n    updateScoreImperial() {\n          let feet = this.measurements.feet;\n          let inches = this.measurements.inches;\n\n          let feetToInches = Number(feet) * 12;\n          if(isNaN(feetToInches)) {\n              feetToInches = 0.00;\n          }\n          let numInches = Number(inches);\n          if(isNaN(numInches)) {\n              numInches = 0.00;\n          }\n          let totalInches = feetToInches + numInches;\n          if(isNaN(totalInches)) {\n              totalInches = 0.00;\n          }\n          this.outputs.metric = String(totalInches * 0.0254).substr(0,7) + \"m\";\n    }\n\n\n    updateScoreMetric() {\n          let meters = Number(this.measurements.meters);\n          if (!isNaN(meters)) {\n              let conversionToFeet = String(meters * 3.28084);\n              let remainder = conversionToFeet.split(\".\");\n              let feet = Number(remainder[0]);\n              let inches = Number(remainder[1]) * 12;\n\n              if (!isNaN(feet)) {\n                  this.outputs.imperial = String(feet).substr(0, 3) + '\\'';\n              }\n              else {\n                  this.outputs.imperial = \"0'\";\n              }\n              if (!isNaN(inches)) {\n                  this.outputs.imperial = this.outputs.imperial +  String(inches).substr(0, 3) + '\\\"';\n              }\n              else {\n                  this.outputs.imperial = this.outputs.imperial  + '0\\\"';\n              }\n          }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/HomeTabs/tools/calculators/unit-converter/unit-converter.ts"],"sourceRoot":""}